#!/usr/bin/perl

require 5.8.0;
use Errno;

%error = (
	TIMED_OUT => 124,
	FAILED => 125,
	NOT_INVOKED => 126,
	NOT_FOUND => 127
);

sub wait_with_timeout {
	my ($pid, $timeout) = @_;
	if ($timeout == 0) {
		return waitpid $pid, 0;
	}
	eval {
		local $SIG{ALRM} = sub { die; };
		alarm $timeout;
		waitpid $pid, 0;
		alarm 0;
		$pid;
	};
}

sub main {
	my $timeout, $pid;
	if (!@_ || ($timeout = shift) !~ m/^[0-9]+$/) {
		$error{FAILED};
	} elsif (!@_) {
		$error{NOT_FOUND};
	} elsif (!defined ($pid = fork)) {
		$error{FAILED};
	} elsif ($pid == 0) {
		eval { setpgrp; };
		exec { $_[0] } @_;
		exit $error{${!ENOENT} ? 'NOT_FOUND' : 'NOT_INVOKED'};
	} elsif (!defined (wait_with_timeout $pid, $timeout)) {
		kill 'TERM', $pid;
		waitpid $pid, 0;
		$error{TIMED_OUT};
	} else {
		$? >> 8;
	}
}

exit (main (@ARGV));
